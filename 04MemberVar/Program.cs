using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

// 보통 한글을 사용하지 않는다(네임스페이스, 클래스)
// 쓸 수 없는 것은 아님
// 한글 처리가 미흡한 점들이 몇몇 곳에 있기 떄문(인코딩 문제)

// 게임을 만들게 되면
// 큰 개념


// 플레이어가 가질 수 있는 세부적인 내용들
// 골드... (충분히 구체화될만큼 작은 개념)
// 경험치
// 공격력
// 방어력
// 명사로 표현되는 것들은
// 대부분 멤버 변수

// 스테이터스는 큰 개념


class Status
{

}
class Player
{
    // 내용을 채우는 것에 대한 이야기이다.
    // 개념 : 플레이어는 골드를 가진다.
    // 세부속성이면서 명사면서 값...

    // 멤버변수의 선언은
    // int(자료형) 이름(식별자)
    // 초기값을 넣어줄 수 있다
    // 리터럴 값이라고 한다.
    // 선언을 하는 동시에 값을 넣어주는 것을 리터럴 초기화라고 한다.
    // 자기 힘을 인터넷에 뿌려놨다.
    // 남의 힘을 얼마나 잘 빌려쓰나?
    // 검색 능력도 프로그래머의 능력
    // 골드의 내부에 값이 담기게 된다
     
    // 1. 공짜가 없다. 여러분들은 무언가를 만들기 위해서 메모리를 지불한다.
    // 

    // exe파일을 실행하면
    // 이 프로그램은 
    // 램에 올라가게 된다.

    // 자료형의 의미
    // 크기 : 4바이트
    // 형태 : 정수
    // 이름의 의미
    // 위치
    // 내가 사용하기 위한 별명

    // int ATK = 램 30번지에 4바이트만큼의 공간을
    // 300이라는 값을 채워넣는 것

    // 수학적 의미로는 이 녀석이 규칙이나 물리법칙,
    // 상수라고 이른다.

    bool isFight; // 좀더 추상적인 개념
    int Gold = 10;
    int Exp = 1000;
    int Atk = 300;
    int Def = 100;
    int Hp = 400;
    int Life;


}
